version: '3.8'

services:
  bot:
    build: .
    container_name: hdays_bot
    depends_on:
      - db
      # - redis
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always
    ports:
      - 8443:8443
    command: python /app/main.py
    # command: watchmedo auto-restart --patterns="*.py" --recursive -- python /app/main.py
    # healthcheck:
    #   test: ["CMD", "bash", "/app/health_check.sh"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 5s
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "200k"
    #     max-file: "10"
    networks:
      - app-network

  db:
    image: postgres:16
    container_name: hdays_db
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always
    ports:
      - 5455:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: hdays_redis
    restart: always
    networks:
      - app-network

  celery_worker:
    build: .
    container_name: hdays_celery_worker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always
    command: celery -A tasks worker --loglevel=info
    networks:
      - app-network

  celery_beat:
    build: .
    container_name: hdays_celery_beat
    depends_on:
      - db
      - redis
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always
    command: celery -A tasks beat --loglevel=info
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
